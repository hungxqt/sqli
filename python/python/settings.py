"""
Django settings for python project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-it-s^0!sy7cpdf&falykep!#o8cdhrjuh^z(ma#(tl_ko-_6^s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'labsPage',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Commented out to allow iframe embedding
    'labsPage.middleware.IframeEmbeddingMiddleware',  # Custom middleware for iframe control
]

ROOT_URLCONF = 'python.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'python.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'security',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',  # Or the IP address/hostname of your MySQL server
        'PORT': '3306',       # Default MySQL port
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Iframe Embedding Configuration
# https://docs.djangoproject.com/en/5.2/ref/clickjacking/

# Method 1: Disable X-Frame-Options completely (current setup)
X_FRAME_OPTIONS = None  # Disables X-Frame-Options header, allows embedding from any site

# Method 2: Use custom middleware with Content Security Policy
# The IframeEmbeddingMiddleware provides more granular control using CSP headers
# CSP frame-ancestors directive is the modern replacement for X-Frame-Options

# Method 3: For specific domain control, modify the middleware to use:
# response['Content-Security-Policy'] = "frame-ancestors 'self' https://trusted-domain.com;"

# Additional Security Headers for Educational Lab
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents MIME type sniffing
SECURE_BROWSER_XSS_FILTER = True    # Enables XSS filtering in browsers

# WARNING: Allowing iframe embedding makes the app vulnerable to clickjacking attacks
# This configuration is appropriate for educational/demo purposes only
# For production applications, consider:
# - Restricting frame-ancestors to specific trusted domains
# - Implementing CSRF protection for all forms
# - Using HTTPS with proper SSL settings
# SECURE_SSL_REDIRECT = True           # Force HTTPS
# And implement proper CSP headers for iframe security

# Iframe Embedding Testing:
# Use the iframe-test.html file in the project root to test embedding functionality
# SECURE_HSTS_SECONDS = 31536000      # HTTP Strict Transport Security
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True
# SESSION_COOKIE_SECURE = True        # Secure cookies over HTTPS only
# CSRF_COOKIE_SECURE = True          # Secure CSRF cookies
